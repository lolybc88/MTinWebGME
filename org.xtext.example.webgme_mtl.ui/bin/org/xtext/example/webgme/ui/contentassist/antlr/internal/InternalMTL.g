/*
* generated by Xtext
*/
grammar InternalMTL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.webgme.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.webgme.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.webgme.services.MTLGrammarAccess;

}

@parser::members {
 
 	private MTLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MTLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getRulesAssignment()); }
(rule__Model__RulesAssignment)*
{ after(grammarAccess.getModelAccess().getRulesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRule
entryRuleRule 
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleAccess().getGroup()); }
(rule__Rule__Group__0)
{ after(grammarAccess.getRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInPattern
entryRuleInPattern 
:
{ before(grammarAccess.getInPatternRule()); }
	 ruleInPattern
{ after(grammarAccess.getInPatternRule()); } 
	 EOF 
;

// Rule InPattern
ruleInPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInPatternAccess().getGroup()); }
(rule__InPattern__Group__0)
{ after(grammarAccess.getInPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilter
entryRuleFilter 
:
{ before(grammarAccess.getFilterRule()); }
	 ruleFilter
{ after(grammarAccess.getFilterRule()); } 
	 EOF 
;

// Rule Filter
ruleFilter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilterAccess().getExprAssignment()); }
(rule__Filter__ExprAssignment)
{ after(grammarAccess.getFilterAccess().getExprAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutPattern
entryRuleOutPattern 
:
{ before(grammarAccess.getOutPatternRule()); }
	 ruleOutPattern
{ after(grammarAccess.getOutPatternRule()); } 
	 EOF 
;

// Rule OutPattern
ruleOutPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutPatternAccess().getGroup()); }
(rule__OutPattern__Group__0)
{ after(grammarAccess.getOutPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignation
entryRuleAssignation 
:
{ before(grammarAccess.getAssignationRule()); }
	 ruleAssignation
{ after(grammarAccess.getAssignationRule()); } 
	 EOF 
;

// Rule Assignation
ruleAssignation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignationAccess().getAlternatives()); }
(rule__Assignation__Alternatives)
{ after(grammarAccess.getAssignationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleExpression
entryRuleSimpleExpression 
:
{ before(grammarAccess.getSimpleExpressionRule()); }
	 ruleSimpleExpression
{ after(grammarAccess.getSimpleExpressionRule()); } 
	 EOF 
;

// Rule SimpleExpression
ruleSimpleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleExpressionAccess().getAlternatives()); }
(rule__SimpleExpression__Alternatives)
{ after(grammarAccess.getSimpleExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNavig
entryRuleNavig 
:
{ before(grammarAccess.getNavigRule()); }
	 ruleNavig
{ after(grammarAccess.getNavigRule()); } 
	 EOF 
;

// Rule Navig
ruleNavig
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNavigAccess().getGroup()); }
(rule__Navig__Group__0)
{ after(grammarAccess.getNavigAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNavigation
entryRuleNavigation 
:
{ before(grammarAccess.getNavigationRule()); }
	 ruleNavigation
{ after(grammarAccess.getNavigationRule()); } 
	 EOF 
;

// Rule Navigation
ruleNavigation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNavigationAccess().getAlternatives()); }
(rule__Navigation__Alternatives)
{ after(grammarAccess.getNavigationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfSentence
entryRuleIfSentence 
:
{ before(grammarAccess.getIfSentenceRule()); }
	 ruleIfSentence
{ after(grammarAccess.getIfSentenceRule()); } 
	 EOF 
;

// Rule IfSentence
ruleIfSentence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfSentenceAccess().getGroup()); }
(rule__IfSentence__Group__0)
{ after(grammarAccess.getIfSentenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResolveExp
entryRuleResolveExp 
:
{ before(grammarAccess.getResolveExpRule()); }
	 ruleResolveExp
{ after(grammarAccess.getResolveExpRule()); } 
	 EOF 
;

// Rule ResolveExp
ruleResolveExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResolveExpAccess().getGroup()); }
(rule__ResolveExp__Group__0)
{ after(grammarAccess.getResolveExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexExpression
entryRuleComplexExpression 
:
{ before(grammarAccess.getComplexExpressionRule()); }
	 ruleComplexExpression
{ after(grammarAccess.getComplexExpressionRule()); } 
	 EOF 
;

// Rule ComplexExpression
ruleComplexExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexExpressionAccess().getAlternatives()); }
(rule__ComplexExpression__Alternatives)
{ after(grammarAccess.getComplexExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssocRoleName
entryRuleAssocRoleName 
:
{ before(grammarAccess.getAssocRoleNameRule()); }
	 ruleAssocRoleName
{ after(grammarAccess.getAssocRoleNameRule()); } 
	 EOF 
;

// Rule AssocRoleName
ruleAssocRoleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssocRoleNameAccess().getAlternatives()); }
(rule__AssocRoleName__Alternatives)
{ after(grammarAccess.getAssocRoleNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionType
entryRuleCollectionType 
:
{ before(grammarAccess.getCollectionTypeRule()); }
	 ruleCollectionType
{ after(grammarAccess.getCollectionTypeRule()); } 
	 EOF 
;

// Rule CollectionType
ruleCollectionType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionTypeAccess().getAlternatives()); }
(rule__CollectionType__Alternatives)
{ after(grammarAccess.getCollectionTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOCLOperationType1
entryRuleOCLOperationType1 
:
{ before(grammarAccess.getOCLOperationType1Rule()); }
	 ruleOCLOperationType1
{ after(grammarAccess.getOCLOperationType1Rule()); } 
	 EOF 
;

// Rule OCLOperationType1
ruleOCLOperationType1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOCLOperationType1Access().getAlternatives()); }
(rule__OCLOperationType1__Alternatives)
{ after(grammarAccess.getOCLOperationType1Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOCLOperationType2
entryRuleOCLOperationType2 
:
{ before(grammarAccess.getOCLOperationType2Rule()); }
	 ruleOCLOperationType2
{ after(grammarAccess.getOCLOperationType2Rule()); } 
	 EOF 
;

// Rule OCLOperationType2
ruleOCLOperationType2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOCLOperationType2Access().getAlternatives()); }
(rule__OCLOperationType2__Alternatives)
{ after(grammarAccess.getOCLOperationType2Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInfixPrimitiveOperator
entryRuleInfixPrimitiveOperator 
:
{ before(grammarAccess.getInfixPrimitiveOperatorRule()); }
	 ruleInfixPrimitiveOperator
{ after(grammarAccess.getInfixPrimitiveOperatorRule()); } 
	 EOF 
;

// Rule InfixPrimitiveOperator
ruleInfixPrimitiveOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getAlternatives()); }
(rule__InfixPrimitiveOperator__Alternatives)
{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSizeOp
entryRuleSizeOp 
:
{ before(grammarAccess.getSizeOpRule()); }
	 ruleSizeOp
{ after(grammarAccess.getSizeOpRule()); } 
	 EOF 
;

// Rule SizeOp
ruleSizeOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSizeOpAccess().getGroup()); }
(rule__SizeOp__Group__0)
{ after(grammarAccess.getSizeOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFirstOp
entryRuleFirstOp 
:
{ before(grammarAccess.getFirstOpRule()); }
	 ruleFirstOp
{ after(grammarAccess.getFirstOpRule()); } 
	 EOF 
;

// Rule FirstOp
ruleFirstOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFirstOpAccess().getGroup()); }
(rule__FirstOp__Group__0)
{ after(grammarAccess.getFirstOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLastOp
entryRuleLastOp 
:
{ before(grammarAccess.getLastOpRule()); }
	 ruleLastOp
{ after(grammarAccess.getLastOpRule()); } 
	 EOF 
;

// Rule LastOp
ruleLastOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLastOpAccess().getGroup()); }
(rule__LastOp__Group__0)
{ after(grammarAccess.getLastOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexOfOp
entryRuleIndexOfOp 
:
{ before(grammarAccess.getIndexOfOpRule()); }
	 ruleIndexOfOp
{ after(grammarAccess.getIndexOfOpRule()); } 
	 EOF 
;

// Rule IndexOfOp
ruleIndexOfOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexOfOpAccess().getGroup()); }
(rule__IndexOfOp__Group__0)
{ after(grammarAccess.getIndexOfOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAllInstancesOp
entryRuleAllInstancesOp 
:
{ before(grammarAccess.getAllInstancesOpRule()); }
	 ruleAllInstancesOp
{ after(grammarAccess.getAllInstancesOpRule()); } 
	 EOF 
;

// Rule AllInstancesOp
ruleAllInstancesOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAllInstancesOpAccess().getGroup()); }
(rule__AllInstancesOp__Group__0)
{ after(grammarAccess.getAllInstancesOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForAllOp
entryRuleForAllOp 
:
{ before(grammarAccess.getForAllOpRule()); }
	 ruleForAllOp
{ after(grammarAccess.getForAllOpRule()); } 
	 EOF 
;

// Rule ForAllOp
ruleForAllOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForAllOpAccess().getGroup()); }
(rule__ForAllOp__Group__0)
{ after(grammarAccess.getForAllOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExistsOp
entryRuleExistsOp 
:
{ before(grammarAccess.getExistsOpRule()); }
	 ruleExistsOp
{ after(grammarAccess.getExistsOpRule()); } 
	 EOF 
;

// Rule ExistsOp
ruleExistsOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExistsOpAccess().getGroup()); }
(rule__ExistsOp__Group__0)
{ after(grammarAccess.getExistsOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectOp
entryRuleSelectOp 
:
{ before(grammarAccess.getSelectOpRule()); }
	 ruleSelectOp
{ after(grammarAccess.getSelectOpRule()); } 
	 EOF 
;

// Rule SelectOp
ruleSelectOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectOpAccess().getGroup()); }
(rule__SelectOp__Group__0)
{ after(grammarAccess.getSelectOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectOp
entryRuleCollectOp 
:
{ before(grammarAccess.getCollectOpRule()); }
	 ruleCollectOp
{ after(grammarAccess.getCollectOpRule()); } 
	 EOF 
;

// Rule CollectOp
ruleCollectOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectOpAccess().getGroup()); }
(rule__CollectOp__Group__0)
{ after(grammarAccess.getCollectOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsTypeOfOp
entryRuleIsTypeOfOp 
:
{ before(grammarAccess.getIsTypeOfOpRule()); }
	 ruleIsTypeOfOp
{ after(grammarAccess.getIsTypeOfOpRule()); } 
	 EOF 
;

// Rule IsTypeOfOp
ruleIsTypeOfOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsTypeOfOpAccess().getGroup()); }
(rule__IsTypeOfOp__Group__0)
{ after(grammarAccess.getIsTypeOfOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleToStringOp
entryRuleToStringOp 
:
{ before(grammarAccess.getToStringOpRule()); }
	 ruleToStringOp
{ after(grammarAccess.getToStringOpRule()); } 
	 EOF 
;

// Rule ToStringOp
ruleToStringOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getToStringOpAccess().getGroup()); }
(rule__ToStringOp__Group__0)
{ after(grammarAccess.getToStringOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConcatOp
entryRuleConcatOp 
:
{ before(grammarAccess.getConcatOpRule()); }
	 ruleConcatOp
{ after(grammarAccess.getConcatOpRule()); } 
	 EOF 
;

// Rule ConcatOp
ruleConcatOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConcatOpAccess().getGroup()); }
(rule__ConcatOp__Group__0)
{ after(grammarAccess.getConcatOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnionOp
entryRuleUnionOp 
:
{ before(grammarAccess.getUnionOpRule()); }
	 ruleUnionOp
{ after(grammarAccess.getUnionOpRule()); } 
	 EOF 
;

// Rule UnionOp
ruleUnionOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnionOpAccess().getGroup()); }
(rule__UnionOp__Group__0)
{ after(grammarAccess.getUnionOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntersectionOp
entryRuleIntersectionOp 
:
{ before(grammarAccess.getIntersectionOpRule()); }
	 ruleIntersectionOp
{ after(grammarAccess.getIntersectionOpRule()); } 
	 EOF 
;

// Rule IntersectionOp
ruleIntersectionOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntersectionOpAccess().getGroup()); }
(rule__IntersectionOp__Group__0)
{ after(grammarAccess.getIntersectionOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsUndefinedOp
entryRuleIsUndefinedOp 
:
{ before(grammarAccess.getIsUndefinedOpRule()); }
	 ruleIsUndefinedOp
{ after(grammarAccess.getIsUndefinedOpRule()); } 
	 EOF 
;

// Rule IsUndefinedOp
ruleIsUndefinedOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsUndefinedOpAccess().getGroup()); }
(rule__IsUndefinedOp__Group__0)
{ after(grammarAccess.getIsUndefinedOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Assignation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getGroup_0()); }
(rule__Assignation__Group_0__0)
{ after(grammarAccess.getAssignationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAssignationAccess().getGroup_1()); }
(rule__Assignation__Group_1__0)
{ after(grammarAccess.getAssignationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().get_stringAssignment_0()); }
(rule__SimpleExpression___stringAssignment_0)
{ after(grammarAccess.getSimpleExpressionAccess().get_stringAssignment_0()); }
)

    |(
{ before(grammarAccess.getSimpleExpressionAccess().get_integerAssignment_1()); }
(rule__SimpleExpression___integerAssignment_1)
{ after(grammarAccess.getSimpleExpressionAccess().get_integerAssignment_1()); }
)

    |(
{ before(grammarAccess.getSimpleExpressionAccess().get_doubleAssignment_2()); }
(rule__SimpleExpression___doubleAssignment_2)
{ after(grammarAccess.getSimpleExpressionAccess().get_doubleAssignment_2()); }
)

    |(
{ before(grammarAccess.getSimpleExpressionAccess().get_booleanAssignment_3()); }
(rule__SimpleExpression___booleanAssignment_3)
{ after(grammarAccess.getSimpleExpressionAccess().get_booleanAssignment_3()); }
)

    |(
{ before(grammarAccess.getSimpleExpressionAccess().getIsNullAssignment_4()); }
(rule__SimpleExpression__IsNullAssignment_4)
{ after(grammarAccess.getSimpleExpressionAccess().getIsNullAssignment_4()); }
)

    |(
{ before(grammarAccess.getSimpleExpressionAccess().getNavigationAssignment_5()); }
(rule__SimpleExpression__NavigationAssignment_5)
{ after(grammarAccess.getSimpleExpressionAccess().getNavigationAssignment_5()); }
)

    |(
{ before(grammarAccess.getSimpleExpressionAccess().getIfSentenceAssignment_6()); }
(rule__SimpleExpression__IfSentenceAssignment_6)
{ after(grammarAccess.getSimpleExpressionAccess().getIfSentenceAssignment_6()); }
)

    |(
{ before(grammarAccess.getSimpleExpressionAccess().getGroup_7()); }
(rule__SimpleExpression__Group_7__0)
{ after(grammarAccess.getSimpleExpressionAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getSimpleExpressionAccess().getResolveAssignment_8()); }
(rule__SimpleExpression__ResolveAssignment_8)
{ after(grammarAccess.getSimpleExpressionAccess().getResolveAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getGroup_0()); }
(rule__Navigation__Group_0__0)
{ after(grammarAccess.getNavigationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNavigationAccess().getGroup_1()); }
(rule__Navigation__Group_1__0)
{ after(grammarAccess.getNavigationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getNavigationAccess().getGroup_2()); }
(rule__Navigation__Group_2__0)
{ after(grammarAccess.getNavigationAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getNavigationAccess().getGroup_3()); }
(rule__Navigation__Group_3__0)
{ after(grammarAccess.getNavigationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getGroup_0()); }
(rule__ComplexExpression__Group_0__0)
{ after(grammarAccess.getComplexExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getComplexExpressionAccess().getGroup_1()); }
(rule__ComplexExpression__Group_1__0)
{ after(grammarAccess.getComplexExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRoleName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssocRoleNameAccess().getChildrenAssignment_0()); }
(rule__AssocRoleName__ChildrenAssignment_0)
{ after(grammarAccess.getAssocRoleNameAccess().getChildrenAssignment_0()); }
)

    |(
{ before(grammarAccess.getAssocRoleNameAccess().getParentAssignment_1()); }
(rule__AssocRoleName__ParentAssignment_1)
{ after(grammarAccess.getAssocRoleNameAccess().getParentAssignment_1()); }
)

    |(
{ before(grammarAccess.getAssocRoleNameAccess().getGroup_2()); }
(rule__AssocRoleName__Group_2__0)
{ after(grammarAccess.getAssocRoleNameAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getSetKeyword_0()); }

	'Set' 

{ after(grammarAccess.getCollectionTypeAccess().getSetKeyword_0()); }
)

    |(
{ before(grammarAccess.getCollectionTypeAccess().getSequenceKeyword_1()); }

	'Sequence' 

{ after(grammarAccess.getCollectionTypeAccess().getSequenceKeyword_1()); }
)

    |(
{ before(grammarAccess.getCollectionTypeAccess().getBagKeyword_2()); }

	'Bag' 

{ after(grammarAccess.getCollectionTypeAccess().getBagKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType1__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType1Access().getAllInsAssignment_0()); }
(rule__OCLOperationType1__AllInsAssignment_0)
{ after(grammarAccess.getOCLOperationType1Access().getAllInsAssignment_0()); }
)

    |(
{ before(grammarAccess.getOCLOperationType1Access().getIsTypeOfAssignment_1()); }
(rule__OCLOperationType1__IsTypeOfAssignment_1)
{ after(grammarAccess.getOCLOperationType1Access().getIsTypeOfAssignment_1()); }
)

    |(
{ before(grammarAccess.getOCLOperationType1Access().getToStringAssignment_2()); }
(rule__OCLOperationType1__ToStringAssignment_2)
{ after(grammarAccess.getOCLOperationType1Access().getToStringAssignment_2()); }
)

    |(
{ before(grammarAccess.getOCLOperationType1Access().getConcatenateAssignment_3()); }
(rule__OCLOperationType1__ConcatenateAssignment_3)
{ after(grammarAccess.getOCLOperationType1Access().getConcatenateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getSizeAssignment_0()); }
(rule__OCLOperationType2__SizeAssignment_0)
{ after(grammarAccess.getOCLOperationType2Access().getSizeAssignment_0()); }
)

    |(
{ before(grammarAccess.getOCLOperationType2Access().getForallAssignment_1()); }
(rule__OCLOperationType2__ForallAssignment_1)
{ after(grammarAccess.getOCLOperationType2Access().getForallAssignment_1()); }
)

    |(
{ before(grammarAccess.getOCLOperationType2Access().getExistsAssignment_2()); }
(rule__OCLOperationType2__ExistsAssignment_2)
{ after(grammarAccess.getOCLOperationType2Access().getExistsAssignment_2()); }
)

    |(
{ before(grammarAccess.getOCLOperationType2Access().getSelectAssignment_3()); }
(rule__OCLOperationType2__SelectAssignment_3)
{ after(grammarAccess.getOCLOperationType2Access().getSelectAssignment_3()); }
)

    |(
{ before(grammarAccess.getOCLOperationType2Access().getCollectAssignment_4()); }
(rule__OCLOperationType2__CollectAssignment_4)
{ after(grammarAccess.getOCLOperationType2Access().getCollectAssignment_4()); }
)

    |(
{ before(grammarAccess.getOCLOperationType2Access().getFirstAssignment_5()); }
(rule__OCLOperationType2__FirstAssignment_5)
{ after(grammarAccess.getOCLOperationType2Access().getFirstAssignment_5()); }
)

    |(
{ before(grammarAccess.getOCLOperationType2Access().getLastAssignment_6()); }
(rule__OCLOperationType2__LastAssignment_6)
{ after(grammarAccess.getOCLOperationType2Access().getLastAssignment_6()); }
)

    |(
{ before(grammarAccess.getOCLOperationType2Access().getIndexOfAssignment_7()); }
(rule__OCLOperationType2__IndexOfAssignment_7)
{ after(grammarAccess.getOCLOperationType2Access().getIndexOfAssignment_7()); }
)

    |(
{ before(grammarAccess.getOCLOperationType2Access().getUnionAssignment_8()); }
(rule__OCLOperationType2__UnionAssignment_8)
{ after(grammarAccess.getOCLOperationType2Access().getUnionAssignment_8()); }
)

    |(
{ before(grammarAccess.getOCLOperationType2Access().getIntersectionAssignment_9()); }
(rule__OCLOperationType2__IntersectionAssignment_9)
{ after(grammarAccess.getOCLOperationType2Access().getIntersectionAssignment_9()); }
)

    |(
{ before(grammarAccess.getOCLOperationType2Access().getIsUndefinedAssignment_10()); }
(rule__OCLOperationType2__IsUndefinedAssignment_10)
{ after(grammarAccess.getOCLOperationType2Access().getIsUndefinedAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfixPrimitiveOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getExclamationMarkEqualsSignKeyword_1()); }

	'!=' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getExclamationMarkEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getLessThanSignKeyword_3()); }

	'<' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getLessThanSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }

	'>=' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getLessThanSignEqualsSignKeyword_5()); }

	'<=' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getLessThanSignEqualsSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getPlusSignKeyword_6()); }

	'+' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getPlusSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getHyphenMinusKeyword_7()); }

	'-' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getHyphenMinusKeyword_7()); }
)

    |(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getAsteriskKeyword_8()); }

	'*' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getAsteriskKeyword_8()); }
)

    |(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getSolidusKeyword_9()); }

	'/' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getSolidusKeyword_9()); }
)

    |(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getAndKeyword_10()); }

	'and' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getAndKeyword_10()); }
)

    |(
{ before(grammarAccess.getInfixPrimitiveOperatorAccess().getOrKeyword_11()); }

	'or' 

{ after(grammarAccess.getInfixPrimitiveOperatorAccess().getOrKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Rule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }

	'rule' 

{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
(rule__Rule__NameAssignment_1)
{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getFromKeyword_3()); }

	'from' 

{ after(grammarAccess.getRuleAccess().getFromKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRuleAccess().getInPatternsAssignment_4()); }
(rule__Rule__InPatternsAssignment_4)
{ after(grammarAccess.getRuleAccess().getInPatternsAssignment_4()); }
)
(
{ before(grammarAccess.getRuleAccess().getInPatternsAssignment_4()); }
(rule__Rule__InPatternsAssignment_4)*
{ after(grammarAccess.getRuleAccess().getInPatternsAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__5__Impl
	rule__Rule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getGroup_5()); }
(rule__Rule__Group_5__0)?
{ after(grammarAccess.getRuleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__6__Impl
	rule__Rule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getToKeyword_6()); }

	'to' 

{ after(grammarAccess.getRuleAccess().getToKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__7__Impl
	rule__Rule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRuleAccess().getOutPatternsAssignment_7()); }
(rule__Rule__OutPatternsAssignment_7)
{ after(grammarAccess.getRuleAccess().getOutPatternsAssignment_7()); }
)
(
{ before(grammarAccess.getRuleAccess().getOutPatternsAssignment_7()); }
(rule__Rule__OutPatternsAssignment_7)*
{ after(grammarAccess.getRuleAccess().getOutPatternsAssignment_7()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Rule__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_5__0__Impl
	rule__Rule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getRuleAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_5__1__Impl
	rule__Rule__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getFilterAssignment_5_1()); }
(rule__Rule__FilterAssignment_5_1)
{ after(grammarAccess.getRuleAccess().getFilterAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRightParenthesisKeyword_5_2()); }

	')' 

{ after(grammarAccess.getRuleAccess().getRightParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InPattern__Group__0__Impl
	rule__InPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPatternAccess().getInElemAssignment_0()); }
(rule__InPattern__InElemAssignment_0)
{ after(grammarAccess.getInPatternAccess().getInElemAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InPattern__Group__1__Impl
	rule__InPattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPatternAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getInPatternAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InPattern__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InPattern__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InPattern__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPatternAccess().getClassNameAssignment_2()); }
(rule__InPattern__ClassNameAssignment_2)
{ after(grammarAccess.getInPatternAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OutPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutPattern__Group__0__Impl
	rule__OutPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPatternAccess().getVarNameAssignment_0()); }
(rule__OutPattern__VarNameAssignment_0)
{ after(grammarAccess.getOutPatternAccess().getVarNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutPattern__Group__1__Impl
	rule__OutPattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPatternAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getOutPatternAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutPattern__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutPattern__Group__2__Impl
	rule__OutPattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutPattern__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPatternAccess().getClassNameAssignment_2()); }
(rule__OutPattern__ClassNameAssignment_2)
{ after(grammarAccess.getOutPatternAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutPattern__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutPattern__Group__3__Impl
	rule__OutPattern__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutPattern__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPatternAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getOutPatternAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutPattern__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutPattern__Group__4__Impl
	rule__OutPattern__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OutPattern__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPatternAccess().getAssgAssignment_4()); }
(rule__OutPattern__AssgAssignment_4)*
{ after(grammarAccess.getOutPatternAccess().getAssgAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutPattern__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutPattern__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutPattern__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPatternAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getOutPatternAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Assignation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group_0__0__Impl
	rule__Assignation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getAttributeAssignment_0_0()); }
(rule__Assignation__AttributeAssignment_0_0)
{ after(grammarAccess.getAssignationAccess().getAttributeAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group_0__1__Impl
	rule__Assignation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getLessThanSignHyphenMinusKeyword_0_1()); }

	'<-' 

{ after(grammarAccess.getAssignationAccess().getLessThanSignHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getExprAssignment_0_2()); }
(rule__Assignation__ExprAssignment_0_2)
{ after(grammarAccess.getAssignationAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group_1__0__Impl
	rule__Assignation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getRelationshipAssignment_1_0()); }
(rule__Assignation__RelationshipAssignment_1_0)
{ after(grammarAccess.getAssignationAccess().getRelationshipAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group_1__1__Impl
	rule__Assignation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getLessThanSignHyphenMinusKeyword_1_1()); }

	'<-' 

{ after(grammarAccess.getAssignationAccess().getLessThanSignHyphenMinusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getExprAssignment_1_2()); }
(rule__Assignation__ExprAssignment_1_2)
{ after(grammarAccess.getAssignationAccess().getExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SimpleExpression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleExpression__Group_7__0__Impl
	rule__SimpleExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getColectionTypeAssignment_7_0()); }
(rule__SimpleExpression__ColectionTypeAssignment_7_0)
{ after(grammarAccess.getSimpleExpressionAccess().getColectionTypeAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleExpression__Group_7__1__Impl
	rule__SimpleExpression__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getLeftCurlyBracketKeyword_7_1()); }

	'{' 

{ after(grammarAccess.getSimpleExpressionAccess().getLeftCurlyBracketKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleExpression__Group_7__2__Impl
	rule__SimpleExpression__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getElemsAssignment_7_2()); }
(rule__SimpleExpression__ElemsAssignment_7_2)*
{ after(grammarAccess.getSimpleExpressionAccess().getElemsAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleExpression__Group_7__3__Impl
	rule__SimpleExpression__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getRightCurlyBracketKeyword_7_3()); }

	'}' 

{ after(grammarAccess.getSimpleExpressionAccess().getRightCurlyBracketKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleExpression__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getNavAssignment_7_4()); }
(rule__SimpleExpression__NavAssignment_7_4)*
{ after(grammarAccess.getSimpleExpressionAccess().getNavAssignment_7_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Navig__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Navig__Group__0__Impl
	rule__Navig__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Navig__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigAccess().getAttrAssignment_0()); }
(rule__Navig__AttrAssignment_0)
{ after(grammarAccess.getNavigAccess().getAttrAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Navig__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Navig__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Navig__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigAccess().getNavigationAssignment_1()); }
(rule__Navig__NavigationAssignment_1)*
{ after(grammarAccess.getNavigAccess().getNavigationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Navigation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Navigation__Group_0__0__Impl
	rule__Navigation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getFullStopKeyword_0_0()); }

	'.' 

{ after(grammarAccess.getNavigationAccess().getFullStopKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Navigation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Navigation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getAttNameAssignment_0_1()); }
(rule__Navigation__AttNameAssignment_0_1)
{ after(grammarAccess.getNavigationAccess().getAttNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Navigation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Navigation__Group_1__0__Impl
	rule__Navigation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getNavigationAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Navigation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Navigation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getAssocRoleAssignment_1_1()); }
(rule__Navigation__AssocRoleAssignment_1_1)
{ after(grammarAccess.getNavigationAccess().getAssocRoleAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Navigation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Navigation__Group_2__0__Impl
	rule__Navigation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getNavigationAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Navigation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Navigation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getOpType1Assignment_2_1()); }
(rule__Navigation__OpType1Assignment_2_1)
{ after(grammarAccess.getNavigationAccess().getOpType1Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Navigation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Navigation__Group_3__0__Impl
	rule__Navigation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getHyphenMinusGreaterThanSignKeyword_3_0()); }

	'->' 

{ after(grammarAccess.getNavigationAccess().getHyphenMinusGreaterThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Navigation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Navigation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getOpType2Assignment_3_1()); }
(rule__Navigation__OpType2Assignment_3_1)
{ after(grammarAccess.getNavigationAccess().getOpType2Assignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfSentence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfSentence__Group__0__Impl
	rule__IfSentence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfSentence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfSentenceAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfSentenceAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfSentence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfSentence__Group__1__Impl
	rule__IfSentence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfSentence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfSentenceAccess().getCondAssignment_1()); }
(rule__IfSentence__CondAssignment_1)
{ after(grammarAccess.getIfSentenceAccess().getCondAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfSentence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfSentence__Group__2__Impl
	rule__IfSentence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfSentence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfSentenceAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getIfSentenceAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfSentence__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfSentence__Group__3__Impl
	rule__IfSentence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfSentence__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfSentenceAccess().getBodyAssignment_3()); }
(rule__IfSentence__BodyAssignment_3)
{ after(grammarAccess.getIfSentenceAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfSentence__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfSentence__Group__4__Impl
	rule__IfSentence__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfSentence__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfSentenceAccess().getElseKeyword_4()); }

	'else' 

{ after(grammarAccess.getIfSentenceAccess().getElseKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfSentence__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfSentence__Group__5__Impl
	rule__IfSentence__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfSentence__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfSentenceAccess().getElsebodyAssignment_5()); }
(rule__IfSentence__ElsebodyAssignment_5)
{ after(grammarAccess.getIfSentenceAccess().getElsebodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfSentence__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfSentence__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfSentence__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfSentenceAccess().getEndifKeyword_6()); }

	'endif' 

{ after(grammarAccess.getIfSentenceAccess().getEndifKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ResolveExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResolveExp__Group__0__Impl
	rule__ResolveExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolveExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolveExpAccess().getResolveKeyword_0()); }

	'resolve' 

{ after(grammarAccess.getResolveExpAccess().getResolveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResolveExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResolveExp__Group__1__Impl
	rule__ResolveExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolveExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolveExpAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getResolveExpAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResolveExp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResolveExp__Group__2__Impl
	rule__ResolveExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolveExp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolveExpAccess().getExpAssignment_2()); }
(rule__ResolveExp__ExpAssignment_2)
{ after(grammarAccess.getResolveExpAccess().getExpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResolveExp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResolveExp__Group__3__Impl
	rule__ResolveExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolveExp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolveExpAccess().getGroup_3()); }
(rule__ResolveExp__Group_3__0)?
{ after(grammarAccess.getResolveExpAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResolveExp__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResolveExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolveExp__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolveExpAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getResolveExpAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ResolveExp__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResolveExp__Group_3__0__Impl
	rule__ResolveExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolveExp__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolveExpAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getResolveExpAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResolveExp__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResolveExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResolveExp__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolveExpAccess().getPositionAssignment_3_1()); }
(rule__ResolveExp__PositionAssignment_3_1)
{ after(grammarAccess.getResolveExpAccess().getPositionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComplexExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexExpression__Group_0__0__Impl
	rule__ComplexExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getPrefixNotAssignment_0_0()); }
(rule__ComplexExpression__PrefixNotAssignment_0_0)
{ after(grammarAccess.getComplexExpressionAccess().getPrefixNotAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexExpression__Group_0__1__Impl
	rule__ComplexExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getComplexExpressionAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexExpression__Group_0__2__Impl
	rule__ComplexExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getLeftAssignment_0_2()); }
(rule__ComplexExpression__LeftAssignment_0_2)
{ after(grammarAccess.getComplexExpressionAccess().getLeftAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexExpression__Group_0__3__Impl
	rule__ComplexExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getGroup_0_3()); }
(rule__ComplexExpression__Group_0_3__0)*
{ after(grammarAccess.getComplexExpressionAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getComplexExpressionAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ComplexExpression__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexExpression__Group_0_3__0__Impl
	rule__ComplexExpression__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getInfixOpAssignment_0_3_0()); }
(rule__ComplexExpression__InfixOpAssignment_0_3_0)
{ after(grammarAccess.getComplexExpressionAccess().getInfixOpAssignment_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexExpression__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexExpression__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getRightAssignment_0_3_1()); }
(rule__ComplexExpression__RightAssignment_0_3_1)
{ after(grammarAccess.getComplexExpressionAccess().getRightAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComplexExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexExpression__Group_1__0__Impl
	rule__ComplexExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getLeftAssignment_1_0()); }
(rule__ComplexExpression__LeftAssignment_1_0)
{ after(grammarAccess.getComplexExpressionAccess().getLeftAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getGroup_1_1()); }
(rule__ComplexExpression__Group_1_1__0)*
{ after(grammarAccess.getComplexExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComplexExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexExpression__Group_1_1__0__Impl
	rule__ComplexExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getInfixOpAssignment_1_1_0()); }
(rule__ComplexExpression__InfixOpAssignment_1_1_0)
{ after(grammarAccess.getComplexExpressionAccess().getInfixOpAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getRightAssignment_1_1_1()); }
(rule__ComplexExpression__RightAssignment_1_1_1)
{ after(grammarAccess.getComplexExpressionAccess().getRightAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssocRoleName__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssocRoleName__Group_2__0__Impl
	rule__AssocRoleName__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRoleName__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssocRoleNameAccess().getNameAssignment_2_0()); }
(rule__AssocRoleName__NameAssignment_2_0)
{ after(grammarAccess.getAssocRoleNameAccess().getNameAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssocRoleName__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssocRoleName__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRoleName__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssocRoleNameAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); }

	'()' 

{ after(grammarAccess.getAssocRoleNameAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SizeOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeOp__Group__0__Impl
	rule__SizeOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeOpAccess().getSizeKeyword_0()); }

	'size' 

{ after(grammarAccess.getSizeOpAccess().getSizeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SizeOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }

	'()' 

{ after(grammarAccess.getSizeOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FirstOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FirstOp__Group__0__Impl
	rule__FirstOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFirstOpAccess().getFirstKeyword_0()); }

	'first' 

{ after(grammarAccess.getFirstOpAccess().getFirstKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FirstOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FirstOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFirstOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }

	'()' 

{ after(grammarAccess.getFirstOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LastOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LastOp__Group__0__Impl
	rule__LastOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LastOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastOpAccess().getLastKeyword_0()); }

	'last' 

{ after(grammarAccess.getLastOpAccess().getLastKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LastOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LastOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LastOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }

	'()' 

{ after(grammarAccess.getLastOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexOfOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexOfOp__Group__0__Impl
	rule__IndexOfOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexOfOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexOfOpAccess().getIndexOfKeyword_0()); }

	'indexOf' 

{ after(grammarAccess.getIndexOfOpAccess().getIndexOfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexOfOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexOfOp__Group__1__Impl
	rule__IndexOfOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexOfOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexOfOpAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIndexOfOpAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexOfOp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexOfOp__Group__2__Impl
	rule__IndexOfOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexOfOp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexOfOpAccess().getIndexAssignment_2()); }
(rule__IndexOfOp__IndexAssignment_2)
{ after(grammarAccess.getIndexOfOpAccess().getIndexAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexOfOp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexOfOp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexOfOp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexOfOpAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIndexOfOpAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AllInstancesOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllInstancesOp__Group__0__Impl
	rule__AllInstancesOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllInstancesOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllInstancesOpAccess().getAllInstancesKeyword_0()); }

	'allInstances' 

{ after(grammarAccess.getAllInstancesOpAccess().getAllInstancesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllInstancesOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllInstancesOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllInstancesOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllInstancesOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }

	'()' 

{ after(grammarAccess.getAllInstancesOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForAllOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAllOp__Group__0__Impl
	rule__ForAllOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllOpAccess().getForAllKeyword_0()); }

	'forAll' 

{ after(grammarAccess.getForAllOpAccess().getForAllKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForAllOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAllOp__Group__1__Impl
	rule__ForAllOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllOpAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForAllOpAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForAllOp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAllOp__Group__2__Impl
	rule__ForAllOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllOp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllOpAccess().getVarAssignment_2()); }
(rule__ForAllOp__VarAssignment_2)
{ after(grammarAccess.getForAllOpAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForAllOp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAllOp__Group__3__Impl
	rule__ForAllOp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllOp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllOpAccess().getVerticalLineKeyword_3()); }

	'|' 

{ after(grammarAccess.getForAllOpAccess().getVerticalLineKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForAllOp__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAllOp__Group__4__Impl
	rule__ForAllOp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllOp__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllOpAccess().getExpAssignment_4()); }
(rule__ForAllOp__ExpAssignment_4)
{ after(grammarAccess.getForAllOpAccess().getExpAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForAllOp__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForAllOp__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllOp__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllOpAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getForAllOpAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ExistsOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsOp__Group__0__Impl
	rule__ExistsOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsOpAccess().getExistsKeyword_0()); }

	'exists' 

{ after(grammarAccess.getExistsOpAccess().getExistsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsOp__Group__1__Impl
	rule__ExistsOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsOpAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getExistsOpAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsOp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsOp__Group__2__Impl
	rule__ExistsOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsOp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsOpAccess().getVarAssignment_2()); }
(rule__ExistsOp__VarAssignment_2)
{ after(grammarAccess.getExistsOpAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsOp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsOp__Group__3__Impl
	rule__ExistsOp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsOp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsOpAccess().getVerticalLineKeyword_3()); }

	'|' 

{ after(grammarAccess.getExistsOpAccess().getVerticalLineKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsOp__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsOp__Group__4__Impl
	rule__ExistsOp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsOp__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsOpAccess().getExpAssignment_4()); }
(rule__ExistsOp__ExpAssignment_4)
{ after(grammarAccess.getExistsOpAccess().getExpAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExistsOp__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExistsOp__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsOp__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsOpAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getExistsOpAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SelectOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectOp__Group__0__Impl
	rule__SelectOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectOpAccess().getSelectKeyword_0()); }

	'select' 

{ after(grammarAccess.getSelectOpAccess().getSelectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectOp__Group__1__Impl
	rule__SelectOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectOpAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSelectOpAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectOp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectOp__Group__2__Impl
	rule__SelectOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectOp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectOpAccess().getVarAssignment_2()); }
(rule__SelectOp__VarAssignment_2)
{ after(grammarAccess.getSelectOpAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectOp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectOp__Group__3__Impl
	rule__SelectOp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectOp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectOpAccess().getVerticalLineKeyword_3()); }

	'|' 

{ after(grammarAccess.getSelectOpAccess().getVerticalLineKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectOp__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectOp__Group__4__Impl
	rule__SelectOp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectOp__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectOpAccess().getExpAssignment_4()); }
(rule__SelectOp__ExpAssignment_4)
{ after(grammarAccess.getSelectOpAccess().getExpAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectOp__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectOp__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectOp__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectOpAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getSelectOpAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CollectOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectOp__Group__0__Impl
	rule__CollectOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectOpAccess().getCollectKeyword_0()); }

	'collect' 

{ after(grammarAccess.getCollectOpAccess().getCollectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectOp__Group__1__Impl
	rule__CollectOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectOpAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getCollectOpAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectOp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectOp__Group__2__Impl
	rule__CollectOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectOp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectOpAccess().getVarAssignment_2()); }
(rule__CollectOp__VarAssignment_2)
{ after(grammarAccess.getCollectOpAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectOp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectOp__Group__3__Impl
	rule__CollectOp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectOp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectOpAccess().getVerticalLineKeyword_3()); }

	'|' 

{ after(grammarAccess.getCollectOpAccess().getVerticalLineKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectOp__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectOp__Group__4__Impl
	rule__CollectOp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectOp__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectOpAccess().getExpAssignment_4()); }
(rule__CollectOp__ExpAssignment_4)
{ after(grammarAccess.getCollectOpAccess().getExpAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectOp__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectOp__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectOp__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectOpAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getCollectOpAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IsTypeOfOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsTypeOfOp__Group__0__Impl
	rule__IsTypeOfOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTypeOfOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsTypeOfOpAccess().getIsTypeOfKeyword_0()); }

	'isTypeOf' 

{ after(grammarAccess.getIsTypeOfOpAccess().getIsTypeOfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsTypeOfOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsTypeOfOp__Group__1__Impl
	rule__IsTypeOfOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTypeOfOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsTypeOfOpAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIsTypeOfOpAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsTypeOfOp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsTypeOfOp__Group__2__Impl
	rule__IsTypeOfOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTypeOfOp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsTypeOfOpAccess().getClassNameAssignment_2()); }
(rule__IsTypeOfOp__ClassNameAssignment_2)
{ after(grammarAccess.getIsTypeOfOpAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsTypeOfOp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsTypeOfOp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsTypeOfOp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsTypeOfOpAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIsTypeOfOpAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ToStringOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ToStringOp__Group__0__Impl
	rule__ToStringOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ToStringOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToStringOpAccess().getToStringKeyword_0()); }

	'toString' 

{ after(grammarAccess.getToStringOpAccess().getToStringKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ToStringOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ToStringOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ToStringOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToStringOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }

	'()' 

{ after(grammarAccess.getToStringOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConcatOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcatOp__Group__0__Impl
	rule__ConcatOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatOpAccess().getConcatenateKeyword_0()); }

	'concatenate' 

{ after(grammarAccess.getConcatOpAccess().getConcatenateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcatOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcatOp__Group__1__Impl
	rule__ConcatOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatOpAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getConcatOpAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcatOp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcatOp__Group__2__Impl
	rule__ConcatOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatOp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatOpAccess().getSAssignment_2()); }
(rule__ConcatOp__SAssignment_2)
{ after(grammarAccess.getConcatOpAccess().getSAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcatOp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcatOp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatOp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatOpAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getConcatOpAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnionOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionOp__Group__0__Impl
	rule__UnionOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionOpAccess().getUnionKeyword_0()); }

	'union' 

{ after(grammarAccess.getUnionOpAccess().getUnionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionOp__Group__1__Impl
	rule__UnionOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionOpAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getUnionOpAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionOp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionOp__Group__2__Impl
	rule__UnionOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionOpAccess().getExpAssignment_2()); }
(rule__UnionOp__ExpAssignment_2)
{ after(grammarAccess.getUnionOpAccess().getExpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionOp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionOp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionOpAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getUnionOpAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IntersectionOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionOp__Group__0__Impl
	rule__IntersectionOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionOpAccess().getIntersectionKeyword_0()); }

	'intersection' 

{ after(grammarAccess.getIntersectionOpAccess().getIntersectionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionOp__Group__1__Impl
	rule__IntersectionOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionOpAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIntersectionOpAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionOp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionOp__Group__2__Impl
	rule__IntersectionOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionOpAccess().getExpAssignment_2()); }
(rule__IntersectionOp__ExpAssignment_2)
{ after(grammarAccess.getIntersectionOpAccess().getExpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionOp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionOp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionOpAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIntersectionOpAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IsUndefinedOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsUndefinedOp__Group__0__Impl
	rule__IsUndefinedOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsUndefinedOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsUndefinedOpAccess().getIsUndefinedKeyword_0()); }

	'isUndefined' 

{ after(grammarAccess.getIsUndefinedOpAccess().getIsUndefinedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsUndefinedOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsUndefinedOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsUndefinedOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsUndefinedOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }

	'()' 

{ after(grammarAccess.getIsUndefinedOpAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__RulesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_0()); }
	ruleRule{ after(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__InPatternsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getInPatternsInPatternParserRuleCall_4_0()); }
	ruleInPattern{ after(grammarAccess.getRuleAccess().getInPatternsInPatternParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__FilterAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getFilterFilterParserRuleCall_5_1_0()); }
	ruleFilter{ after(grammarAccess.getRuleAccess().getFilterFilterParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__OutPatternsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getOutPatternsOutPatternParserRuleCall_7_0()); }
	ruleOutPattern{ after(grammarAccess.getRuleAccess().getOutPatternsOutPatternParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InPattern__InElemAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPatternAccess().getInElemIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getInPatternAccess().getInElemIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InPattern__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPatternAccess().getClassNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getInPatternAccess().getClassNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__ExprAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterAccess().getExprComplexExpressionParserRuleCall_0()); }
	ruleComplexExpression{ after(grammarAccess.getFilterAccess().getExprComplexExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutPattern__VarNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPatternAccess().getVarNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getOutPatternAccess().getVarNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutPattern__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPatternAccess().getClassNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getOutPatternAccess().getClassNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutPattern__AssgAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPatternAccess().getAssgAssignationParserRuleCall_4_0()); }
	ruleAssignation{ after(grammarAccess.getOutPatternAccess().getAssgAssignationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__AttributeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getAttributeIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getAssignationAccess().getAttributeIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getExprComplexExpressionParserRuleCall_0_2_0()); }
	ruleComplexExpression{ after(grammarAccess.getAssignationAccess().getExprComplexExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__RelationshipAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getRelationshipAssocRoleNameParserRuleCall_1_0_0()); }
	ruleAssocRoleName{ after(grammarAccess.getAssignationAccess().getRelationshipAssocRoleNameParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__ExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getExprComplexExpressionParserRuleCall_1_2_0()); }
	ruleComplexExpression{ after(grammarAccess.getAssignationAccess().getExprComplexExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression___stringAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().get_stringSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getSimpleExpressionAccess().get_stringSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression___integerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().get_integerINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getSimpleExpressionAccess().get_integerINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression___doubleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().get_doubleDOUBLETerminalRuleCall_2_0()); }
	RULE_DOUBLE{ after(grammarAccess.getSimpleExpressionAccess().get_doubleDOUBLETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression___booleanAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().get_booleanBOOLEANTerminalRuleCall_3_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getSimpleExpressionAccess().get_booleanBOOLEANTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__IsNullAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getIsNullNullKeyword_4_0()); }
(
{ before(grammarAccess.getSimpleExpressionAccess().getIsNullNullKeyword_4_0()); }

	'null' 

{ after(grammarAccess.getSimpleExpressionAccess().getIsNullNullKeyword_4_0()); }
)

{ after(grammarAccess.getSimpleExpressionAccess().getIsNullNullKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__NavigationAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getNavigationNavigParserRuleCall_5_0()); }
	ruleNavig{ after(grammarAccess.getSimpleExpressionAccess().getNavigationNavigParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__IfSentenceAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getIfSentenceIfSentenceParserRuleCall_6_0()); }
	ruleIfSentence{ after(grammarAccess.getSimpleExpressionAccess().getIfSentenceIfSentenceParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__ColectionTypeAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getColectionTypeCollectionTypeParserRuleCall_7_0_0()); }
	ruleCollectionType{ after(grammarAccess.getSimpleExpressionAccess().getColectionTypeCollectionTypeParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__ElemsAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getElemsComplexExpressionParserRuleCall_7_2_0()); }
	ruleComplexExpression{ after(grammarAccess.getSimpleExpressionAccess().getElemsComplexExpressionParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__NavAssignment_7_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getNavNavigationParserRuleCall_7_4_0()); }
	ruleNavigation{ after(grammarAccess.getSimpleExpressionAccess().getNavNavigationParserRuleCall_7_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__ResolveAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExpressionAccess().getResolveResolveExpParserRuleCall_8_0()); }
	ruleResolveExp{ after(grammarAccess.getSimpleExpressionAccess().getResolveResolveExpParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Navig__AttrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigAccess().getAttrIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getNavigAccess().getAttrIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Navig__NavigationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigAccess().getNavigationNavigationParserRuleCall_1_0()); }
	ruleNavigation{ after(grammarAccess.getNavigAccess().getNavigationNavigationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__AttNameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getAttNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getNavigationAccess().getAttNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__AssocRoleAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getAssocRoleAssocRoleNameParserRuleCall_1_1_0()); }
	ruleAssocRoleName{ after(grammarAccess.getNavigationAccess().getAssocRoleAssocRoleNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__OpType1Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getOpType1OCLOperationType1ParserRuleCall_2_1_0()); }
	ruleOCLOperationType1{ after(grammarAccess.getNavigationAccess().getOpType1OCLOperationType1ParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Navigation__OpType2Assignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationAccess().getOpType2OCLOperationType2ParserRuleCall_3_1_0()); }
	ruleOCLOperationType2{ after(grammarAccess.getNavigationAccess().getOpType2OCLOperationType2ParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfSentence__CondAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfSentenceAccess().getCondComplexExpressionParserRuleCall_1_0()); }
	ruleComplexExpression{ after(grammarAccess.getIfSentenceAccess().getCondComplexExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfSentence__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfSentenceAccess().getBodyComplexExpressionParserRuleCall_3_0()); }
	ruleComplexExpression{ after(grammarAccess.getIfSentenceAccess().getBodyComplexExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfSentence__ElsebodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfSentenceAccess().getElsebodyComplexExpressionParserRuleCall_5_0()); }
	ruleComplexExpression{ after(grammarAccess.getIfSentenceAccess().getElsebodyComplexExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResolveExp__ExpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolveExpAccess().getExpComplexExpressionParserRuleCall_2_0()); }
	ruleComplexExpression{ after(grammarAccess.getResolveExpAccess().getExpComplexExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResolveExp__PositionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResolveExpAccess().getPositionINTTerminalRuleCall_3_1_0()); }
	RULE_INT{ after(grammarAccess.getResolveExpAccess().getPositionINTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__PrefixNotAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getPrefixNotNotKeyword_0_0_0()); }
(
{ before(grammarAccess.getComplexExpressionAccess().getPrefixNotNotKeyword_0_0_0()); }

	'not' 

{ after(grammarAccess.getComplexExpressionAccess().getPrefixNotNotKeyword_0_0_0()); }
)

{ after(grammarAccess.getComplexExpressionAccess().getPrefixNotNotKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__LeftAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getLeftSimpleExpressionParserRuleCall_0_2_0()); }
	ruleSimpleExpression{ after(grammarAccess.getComplexExpressionAccess().getLeftSimpleExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__InfixOpAssignment_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getInfixOpInfixPrimitiveOperatorParserRuleCall_0_3_0_0()); }
	ruleInfixPrimitiveOperator{ after(grammarAccess.getComplexExpressionAccess().getInfixOpInfixPrimitiveOperatorParserRuleCall_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__RightAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getRightSimpleExpressionParserRuleCall_0_3_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getComplexExpressionAccess().getRightSimpleExpressionParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__LeftAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getLeftSimpleExpressionParserRuleCall_1_0_0()); }
	ruleSimpleExpression{ after(grammarAccess.getComplexExpressionAccess().getLeftSimpleExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__InfixOpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getInfixOpInfixPrimitiveOperatorParserRuleCall_1_1_0_0()); }
	ruleInfixPrimitiveOperator{ after(grammarAccess.getComplexExpressionAccess().getInfixOpInfixPrimitiveOperatorParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexExpression__RightAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexExpressionAccess().getRightSimpleExpressionParserRuleCall_1_1_1_0()); }
	ruleSimpleExpression{ after(grammarAccess.getComplexExpressionAccess().getRightSimpleExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRoleName__ChildrenAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssocRoleNameAccess().getChildrenChildrenKeyword_0_0()); }
(
{ before(grammarAccess.getAssocRoleNameAccess().getChildrenChildrenKeyword_0_0()); }

	'children()' 

{ after(grammarAccess.getAssocRoleNameAccess().getChildrenChildrenKeyword_0_0()); }
)

{ after(grammarAccess.getAssocRoleNameAccess().getChildrenChildrenKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRoleName__ParentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssocRoleNameAccess().getParentParentKeyword_1_0()); }
(
{ before(grammarAccess.getAssocRoleNameAccess().getParentParentKeyword_1_0()); }

	'parent()' 

{ after(grammarAccess.getAssocRoleNameAccess().getParentParentKeyword_1_0()); }
)

{ after(grammarAccess.getAssocRoleNameAccess().getParentParentKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssocRoleName__NameAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssocRoleNameAccess().getNameIDTerminalRuleCall_2_0_0()); }
	RULE_ID{ after(grammarAccess.getAssocRoleNameAccess().getNameIDTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType1__AllInsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType1Access().getAllInsAllInstancesOpParserRuleCall_0_0()); }
	ruleAllInstancesOp{ after(grammarAccess.getOCLOperationType1Access().getAllInsAllInstancesOpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType1__IsTypeOfAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType1Access().getIsTypeOfIsTypeOfOpParserRuleCall_1_0()); }
	ruleIsTypeOfOp{ after(grammarAccess.getOCLOperationType1Access().getIsTypeOfIsTypeOfOpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType1__ToStringAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType1Access().getToStringToStringOpParserRuleCall_2_0()); }
	ruleToStringOp{ after(grammarAccess.getOCLOperationType1Access().getToStringToStringOpParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType1__ConcatenateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType1Access().getConcatenateConcatOpParserRuleCall_3_0()); }
	ruleConcatOp{ after(grammarAccess.getOCLOperationType1Access().getConcatenateConcatOpParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__SizeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getSizeSizeOpParserRuleCall_0_0()); }
	ruleSizeOp{ after(grammarAccess.getOCLOperationType2Access().getSizeSizeOpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__ForallAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getForallForAllOpParserRuleCall_1_0()); }
	ruleForAllOp{ after(grammarAccess.getOCLOperationType2Access().getForallForAllOpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__ExistsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getExistsExistsOpParserRuleCall_2_0()); }
	ruleExistsOp{ after(grammarAccess.getOCLOperationType2Access().getExistsExistsOpParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__SelectAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getSelectSelectOpParserRuleCall_3_0()); }
	ruleSelectOp{ after(grammarAccess.getOCLOperationType2Access().getSelectSelectOpParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__CollectAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getCollectCollectOpParserRuleCall_4_0()); }
	ruleCollectOp{ after(grammarAccess.getOCLOperationType2Access().getCollectCollectOpParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__FirstAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getFirstFirstOpParserRuleCall_5_0()); }
	ruleFirstOp{ after(grammarAccess.getOCLOperationType2Access().getFirstFirstOpParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__LastAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getLastLastOpParserRuleCall_6_0()); }
	ruleLastOp{ after(grammarAccess.getOCLOperationType2Access().getLastLastOpParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__IndexOfAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getIndexOfIndexOfOpParserRuleCall_7_0()); }
	ruleIndexOfOp{ after(grammarAccess.getOCLOperationType2Access().getIndexOfIndexOfOpParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__UnionAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getUnionUnionOpParserRuleCall_8_0()); }
	ruleUnionOp{ after(grammarAccess.getOCLOperationType2Access().getUnionUnionOpParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__IntersectionAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getIntersectionIntersectionOpParserRuleCall_9_0()); }
	ruleIntersectionOp{ after(grammarAccess.getOCLOperationType2Access().getIntersectionIntersectionOpParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OCLOperationType2__IsUndefinedAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOCLOperationType2Access().getIsUndefinedIsUndefinedOpParserRuleCall_10_0()); }
	ruleIsUndefinedOp{ after(grammarAccess.getOCLOperationType2Access().getIsUndefinedIsUndefinedOpParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexOfOp__IndexAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexOfOpAccess().getIndexINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getIndexOfOpAccess().getIndexINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllOp__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllOpAccess().getVarIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getForAllOpAccess().getVarIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllOp__ExpAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllOpAccess().getExpComplexExpressionParserRuleCall_4_0()); }
	ruleComplexExpression{ after(grammarAccess.getForAllOpAccess().getExpComplexExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsOp__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsOpAccess().getVarIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getExistsOpAccess().getVarIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExistsOp__ExpAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistsOpAccess().getExpComplexExpressionParserRuleCall_4_0()); }
	ruleComplexExpression{ after(grammarAccess.getExistsOpAccess().getExpComplexExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectOp__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectOpAccess().getVarIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSelectOpAccess().getVarIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectOp__ExpAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectOpAccess().getExpComplexExpressionParserRuleCall_4_0()); }
	ruleComplexExpression{ after(grammarAccess.getSelectOpAccess().getExpComplexExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectOp__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectOpAccess().getVarIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getCollectOpAccess().getVarIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectOp__ExpAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectOpAccess().getExpComplexExpressionParserRuleCall_4_0()); }
	ruleComplexExpression{ after(grammarAccess.getCollectOpAccess().getExpComplexExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsTypeOfOp__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsTypeOfOpAccess().getClassNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getIsTypeOfOpAccess().getClassNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatOp__SAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcatOpAccess().getSSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getConcatOpAccess().getSSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionOp__ExpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionOpAccess().getExpComplexExpressionParserRuleCall_2_0()); }
	ruleComplexExpression{ after(grammarAccess.getUnionOpAccess().getExpComplexExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionOp__ExpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionOpAccess().getExpComplexExpressionParserRuleCall_2_0()); }
	ruleComplexExpression{ after(grammarAccess.getIntersectionOpAccess().getExpComplexExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ANY_OTHER : .;


